{"ast":null,"code":"import { EventEmitter, Component, Input, Output, ChangeDetectionStrategy, Injectable, Directive, ElementRef, NgModule } from '@angular/core';\nimport { extractMath } from 'extract-math';\nimport { CommonModule } from '@angular/common';\nimport { render, renderToString } from 'katex';\nimport { DomSanitizer } from '@angular/platform-browser';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = function (a0) {\n  return {\n    displayMode: a0\n  };\n};\n\nfunction KatexParagraphComponent_ng_container_1_ng_katex_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng-katex\", 3);\n  }\n\n  if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"equation\", segment_r1.raw)(\"options\", ɵngcc0.ɵɵpureFunction1(2, _c0, segment_r1.type === \"display\"));\n  }\n}\n\nfunction KatexParagraphComponent_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.value);\n  }\n}\n\nfunction KatexParagraphComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, KatexParagraphComponent_ng_container_1_ng_katex_1_Template, 1, 4, \"ng-katex\", 1);\n    ɵngcc0.ɵɵtemplate(2, KatexParagraphComponent_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const segment_r1 = ctx.$implicit;\n\n    const _r3 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", segment_r1.math)(\"ngIfElse\", _r3);\n  }\n}\n\nlet KatexComponent = /*#__PURE__*/(() => {\n  class KatexComponent {\n    constructor() {\n      this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n\n\n    hasError(error) {\n      this.onError.emit(error);\n    }\n\n  }\n\n  KatexComponent.ɵfac = function KatexComponent_Factory(t) {\n    return new (t || KatexComponent)();\n  };\n\n  KatexComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: KatexComponent,\n    selectors: [[\"ng-katex\"]],\n    inputs: {\n      equation: \"equation\",\n      options: \"options\"\n    },\n    outputs: {\n      onError: \"onError\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"katex\", \"katex-options\", \"someEvent\"]],\n    template: function KatexComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵlistener(\"someEvent\", function KatexComponent_Template_span_someEvent_0_listener($event) {\n          return ctx.hasError($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"katex\", ctx.equation)(\"katex-options\", ctx.options);\n      }\n    },\n    directives: function () {\n      return [KatexDirective];\n    },\n    encapsulation: 2\n  });\n  return KatexComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  KatexComponent.prototype.equation;\n  /** @type {?} */\n\n  KatexComponent.prototype.options;\n  /** @type {?} */\n\n  KatexComponent.prototype.onError;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet KatexParagraphComponent = /*#__PURE__*/(() => {\n  class KatexParagraphComponent {\n    /**\n     * @return {?}\n     */\n    get segments() {\n      return extractMath(this.paragraph);\n    }\n\n  }\n\n  KatexParagraphComponent.ɵfac = function KatexParagraphComponent_Factory(t) {\n    return new (t || KatexParagraphComponent)();\n  };\n\n  KatexParagraphComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: KatexParagraphComponent,\n    selectors: [[\"ng-katex-paragraph\"]],\n    inputs: {\n      paragraph: \"paragraph\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"equation\", \"options\", 4, \"ngIf\", \"ngIfElse\"], [\"text\", \"\"], [3, \"equation\", \"options\"]],\n    template: function KatexParagraphComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtemplate(1, KatexParagraphComponent_ng_container_1_Template, 4, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.segments);\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, KatexComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return KatexParagraphComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  KatexParagraphComponent.prototype.paragraph;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet KatexService = /*#__PURE__*/(() => {\n  class KatexService {\n    /**\n     * @param {?} equation\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    render(equation, element, options) {\n      return render(equation, element.nativeElement, options);\n    }\n    /**\n     * @param {?} equation\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    renderToString(equation, options) {\n      return renderToString(equation, options);\n    }\n\n  }\n\n  KatexService.ɵfac = function KatexService_Factory(t) {\n    return new (t || KatexService)();\n  };\n\n  KatexService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: KatexService,\n    factory: KatexService.ɵfac\n  });\n  return KatexService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet KatexDirective = /*#__PURE__*/(() => {\n  class KatexDirective {\n    /**\n     * @param {?} el\n     * @param {?} katexService\n     */\n    constructor(el, katexService) {\n      this.el = el;\n      this.katexService = katexService;\n      this.onError = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnChanges() {\n      try {\n        this.katexService.render(this.equation, this.el, this.options);\n      } catch (e) {\n        this.onError.emit(e);\n      }\n    }\n\n  }\n\n  KatexDirective.ɵfac = function KatexDirective_Factory(t) {\n    return new (t || KatexDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(KatexService));\n  };\n\n  KatexDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: KatexDirective,\n    selectors: [[\"\", \"katex\", \"\"]],\n    inputs: {\n      equation: [\"katex\", \"equation\"],\n      options: [\"katex-options\", \"options\"]\n    },\n    outputs: {\n      onError: \"onError\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  /** @nocollapse */\n\n  return KatexDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  KatexDirective.prototype.equation;\n  /** @type {?} */\n\n  KatexDirective.prototype.options;\n  /** @type {?} */\n\n  KatexDirective.prototype.onError;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  KatexDirective.prototype.el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  KatexDirective.prototype.katexService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet KatexHtmlComponent = /*#__PURE__*/(() => {\n  class KatexHtmlComponent {\n    /**\n     * @param {?} domSanitizer\n     * @param {?} katexService\n     */\n    constructor(domSanitizer, katexService) {\n      this.domSanitizer = domSanitizer;\n      this.katexService = katexService;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get allHtml() {\n      /** @type {?} */\n      let segments = this.segments;\n      /** @type {?} */\n\n      var allHtml = segments.map(\n      /**\n      * @param {?} seg\n      * @return {?}\n      */\n      seg => {\n        if (seg.math) {\n          return this.katexService.renderToString(seg.raw, {\n            displayMode: seg.type === 'display'\n          });\n        } else {\n          return seg.value;\n        }\n      }).reduce(\n      /**\n      * @param {?} total\n      * @param {?} current\n      * @return {?}\n      */\n      (total, current) => {\n        return total += current;\n      });\n      return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get segments() {\n      return extractMath(this.html);\n    }\n\n  }\n\n  KatexHtmlComponent.ɵfac = function KatexHtmlComponent_Factory(t) {\n    return new (t || KatexHtmlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(KatexService));\n  };\n\n  KatexHtmlComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: KatexHtmlComponent,\n    selectors: [[\"ng-katex-html\"]],\n    inputs: {\n      html: \"html\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"innerHTML\"]],\n    template: function KatexHtmlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.allHtml, ɵngcc0.ɵɵsanitizeHtml);\n      }\n    },\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return KatexHtmlComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  KatexHtmlComponent.prototype.html;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  KatexHtmlComponent.prototype.domSanitizer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  KatexHtmlComponent.prototype.katexService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet KatexModule = /*#__PURE__*/(() => {\n  class KatexModule {}\n\n  KatexModule.ɵfac = function KatexModule_Factory(t) {\n    return new (t || KatexModule)();\n  };\n\n  KatexModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: KatexModule\n  });\n  KatexModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [KatexService],\n    imports: [[CommonModule]]\n  });\n  return KatexModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(KatexModule, {\n    declarations: function () {\n      return [KatexDirective, KatexComponent, KatexParagraphComponent, KatexHtmlComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [KatexComponent, KatexParagraphComponent, KatexHtmlComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { KatexComponent, KatexModule, KatexParagraphComponent, KatexService as ɵa, KatexDirective as ɵb, KatexHtmlComponent as ɵc }; //# sourceMappingURL=ng-katex.js.map","map":null,"metadata":{},"sourceType":"module"}