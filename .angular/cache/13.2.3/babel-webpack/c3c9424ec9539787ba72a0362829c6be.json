{"ast":null,"code":"import { render } from 'katex';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { categoryNames, categoryQuestions, Category } from './questions/questions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/sidenav\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/list\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"ng-katex\";\nimport * as i9 from \"@angular/material/progress-bar\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/cdk/text-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/forms\";\n\nfunction AppComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_9_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const cat_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.category = cat_r5.key;\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \" navigate_next\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cat_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", cat_r5.value, \" \");\n  }\n}\n\nfunction AppComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return _r0.toggle();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.counter = ctx_r10.counter + 1;\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \" navigate_next\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_29_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.counter = 0;\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"replay\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      this.categoryNames = categoryNames;\n      this.questions = categoryQuestions;\n      this.options = {\n        displayMode: true,\n        throwOnError: false\n      };\n      this.isHandset = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n      this.userInput = '';\n      this.category = Category.SYMBOLS;\n      this.counter = +localStorage.getItem(JSON.stringify(this.category));\n    }\n\n    get userInput() {\n      return this._userInput;\n    }\n\n    set userInput(val) {\n      this._userInput = val;\n    }\n\n    get category() {\n      return this._category;\n    }\n\n    set category(val) {\n      this.userInput = '';\n      this._category = val;\n      this.counter = +localStorage.getItem(JSON.stringify(this.category));\n    }\n\n    get counter() {\n      return this._counter;\n    }\n\n    set counter(val) {\n      this.userInput = '';\n      this._counter = val;\n      localStorage.setItem(JSON.stringify(this.category), this.counter.toString());\n    }\n\n    get target() {\n      return this.questions[this.category][this.counter];\n    }\n\n    katexElement(katexString) {\n      let element = document.createElement('object');\n      render(katexString, element, {\n        throwOnError: false\n      });\n      element = element.querySelector('semantics');\n      element.removeChild(element.querySelector('annotation'));\n      return element;\n    }\n\n    testEquality() {\n      try {\n        const userInputElement = this.katexElement(this.userInput);\n        const objectifElement = this.katexElement(this.target);\n        return userInputElement.isEqualNode(objectifElement);\n      } catch (_a) {\n        return false;\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 30,\n    vars: 25,\n    consts: [[\"fixedInViewport\", \"\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"color\", \"primary\"], [\"mat-list-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"paragraph\", \"$\\\\LaTeX$ Quiz\"], [\"mode\", \"determinate\", 3, \"value\"], [3, \"hidden\"], [3, \"equation\", \"options\"], [\"appearance\", \"outline\"], [\"cdkTextareaAutosize\", \"\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-list-item\", \"\", 3, \"click\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-sidenav-container\");\n        i0.ɵɵelementStart(1, \"mat-sidenav\", 0, 1);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementStart(6, \"mat-toolbar\", 2);\n        i0.ɵɵtext(7, \"Cat\\u00E9gories\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-action-list\");\n        i0.ɵɵtemplate(9, AppComponent_button_9_Template, 4, 1, \"button\", 3);\n        i0.ɵɵpipe(10, \"keyvalue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-sidenav-content\");\n        i0.ɵɵelementStart(12, \"mat-toolbar\", 2);\n        i0.ɵɵtemplate(13, AppComponent_button_13_Template, 3, 0, \"button\", 4);\n        i0.ɵɵpipe(14, \"async\");\n        i0.ɵɵelement(15, \"ng-katex-paragraph\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"h1\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"mat-progress-bar\", 6);\n        i0.ɵɵelementStart(19, \"div\", 7);\n        i0.ɵɵelement(20, \"ng-katex\", 8);\n        i0.ɵɵelementStart(21, \"mat-form-field\", 9);\n        i0.ɵɵelementStart(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Votre r\\u00E9ponse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"textarea\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_textarea_ngModelChange_24_listener($event) {\n          return ctx.userInput = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\");\n        i0.ɵɵelement(26, \"ng-katex\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, AppComponent_button_27_Template, 3, 0, \"button\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵtemplate(29, AppComponent_button_29_Template, 3, 0, \"button\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 17, ctx.isHandset) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 19, ctx.isHandset) === false);\n        i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 15, ctx.isHandset) ? \"dialog\" : \"navigation\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 21, ctx.categoryNames));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 23, ctx.isHandset));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.categoryNames[ctx.category]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.counter / ctx.questions[ctx.category].length * 100);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.counter >= ctx.questions[ctx.category].length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"equation\", ctx.target)(\"options\", ctx.options);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"equation\", ctx.userInput)(\"options\", ctx.options);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.testEquality());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.counter >= ctx.questions[ctx.category].length);\n      }\n    },\n    directives: [i2.MatSidenavContainer, i2.MatSidenav, i3.MatToolbar, i4.MatList, i5.NgForOf, i4.MatListItem, i6.MatIcon, i2.MatSidenavContent, i5.NgIf, i7.MatButton, i8.KatexParagraphComponent, i9.MatProgressBar, i8.KatexComponent, i10.MatFormField, i10.MatLabel, i11.CdkTextareaAutosize, i12.MatInput, i13.DefaultValueAccessor, i13.NgControlStatus, i13.NgModel],\n    pipes: [i5.AsyncPipe, i5.KeyValuePipe],\n    styles: [\"mat-sidenav-container[_ngcontent-%COMP%]{height:100vh}sidenav[_ngcontent-%COMP%]   mat-toolbar[_ngcontent-%COMP%]{background:inherit}mat-toolbar[_ngcontent-%COMP%]{position:-webkit-sticky;position:sticky;top:0;z-index:1}h1[_ngcontent-%COMP%]{text-align:center;margin-top:20px}mat-sidenav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-weight:700}mat-progress-bar[_ngcontent-%COMP%]{height:30px}mat-sidenav-content[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-weight:700}ng-katex-paragraph[_ngcontent-%COMP%]{margin-left:50px;font-size:2rem}ng-katex[_ngcontent-%COMP%]{font-size:2rem}mat-form-field[_ngcontent-%COMP%]{width:80%;font-size:2rem;padding:20px}mat-progress-bar[_ngcontent-%COMP%]{margin:0 auto;width:90%}mat-sidenav-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{transform:scale(2);margin:50px}div[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}