{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SEGMENTS_REGEX = /(\\\\\\$)|\\$\\$(.*?[^\\\\])\\$\\$|\\$(.*?[^\\\\])\\$/;\n\nfunction extractMath(input) {\n  var _a, _b, _c, _d;\n\n  var segments = [];\n  var dollar;\n  var display;\n  var inline;\n\n  var _e = __read(input.split(exports.SEGMENTS_REGEX)),\n      text = _e[0],\n      parts = _e.slice(1);\n\n  pushText(segments, text);\n\n  while (parts.length > 0) {\n    _a = parts, _b = __read(_a), dollar = _b[0], display = _b[1], inline = _b[2], parts = _b.slice(3);\n\n    if (dollar) {\n      pushText(segments, '$');\n    } else if (display) {\n      pushMath(segments, 'display', display);\n    } else if (inline) {\n      pushMath(segments, 'inline', inline);\n    }\n\n    _c = parts, _d = __read(_c), text = _d[0], parts = _d.slice(1);\n    pushText(segments, text);\n  }\n\n  return segments;\n}\n\nexports.extractMath = extractMath;\n\nfunction pushText(segments, text) {\n  if (!text) {\n    return;\n  }\n\n  var last = segments[segments.length - 1];\n\n  if (last && last.type === 'text') {\n    last.value += text;\n    last.raw += text;\n  } else {\n    segments.push({\n      type: 'text',\n      math: false,\n      value: text,\n      raw: text\n    });\n  }\n}\n\nfunction pushMath(segments, mode, text) {\n  if (!text) {\n    return;\n  }\n\n  segments.push({\n    type: mode,\n    math: true,\n    value: text.replace(/\\\\\\$/g, '$'),\n    raw: text\n  });\n} //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}